#!/bin/bash
#======================================================
#
# Ricostruzione ambiente per la creazione del WARC delle tesi di dottorato
# Autore:   Argentino Trombin
# Data:     12/07/2019
# NOATA:    Ricostruito da vari pezzi non documentati di Raffaele Messuti trovati
#           sul server md-front02.bncf.lan (192.168.7.151)
#           cartelle:   /home/rmessuti
#                       /mnt/volume2/in-progress
#           https://github.com/depositolegale/ojs-archive
#======================================================
# Prendi l'ambiente dell'utente
#. ~.bash_profile

source scripts/run_main.sh



#======================================
# Start execution
# ./run.sh
# Any missing required subdirectory will be automatically generated
#======================================
cd $HARVEST_DIR
ora="date +%Y-%m-%d-%H:%M:%S"
tmr=$(timer)

echo "===================================================="
echo " Procedura per l'acquisizione delle tesi di "
echo " dottorato o riviste (eJournals)"
# echo " Versione 2019_11_08.1" # aggiunto check_for_bad_seeds_lookup
# echo " Versione 2019_11_18.2" # nuova gestione per gestire spazio disco
# echo " Versione 2019_11_27.1" # eliminazione di seed duplicati (vedi seeds_dup.csv)
# echo " Versione 2019_11_28.1" # gestione ricevute in un unico foglio excel (ok, [ko, no didl resource, missing, url doppie])
                              # nuova gestione report in formato excel
# echo " Versione 2019_12_03.1" # gestione errori in warc filtrati per seed da scaricare
# echo " Versione 2019_12_08.1" # get_warcked_seeds_and_not_from_logs (unificato  le get delle url salvate ed andate in errore)

# echo " Versione 2019_12_09.1"   # Rifatto index_warcs per gestire + volumi usando i symbolic links
                                # Pulizia indici tramite liste seed da scaricare
echo " Versione 2020_23_01.1" # Generazione lista delle tesi in ricevuta
# echo " Versione 2019_12_08.1"
# echo " Versione 2019_12_08.1"
# echo " Versione 2019_12_08.1"


echo " `${ora}` Inizio processo di run.sh"
echo "==================================================="

# -------------
# PRELIMINARIES
# -------------
check_arguments "$@"
init_variables
print_configuration
# ----
# MAIN
# ----

# harvest_metadata

# Troviamo documenti sotto embargo
# find_embargoed

# Rimuoviamo le tesi alle quali hanno tolto l'embargo
# scripts/DbDeleteUnembargoed.sh

# Carichiamo le tesi sotto embargo sul db
# scripts/DbUpdateInsert.sh


# createSeeds

# count_all_seeds


# if [ "$DEVELOPMENT" == "true" ]; then
#      trim_seeds $warc_dev_seeds
# fi

# prepare_wget_sites_list
# create_warcs_concurrently
# check_pdf_download


# make_dest_warcs_read_write
# copy_warcs_and_logs_to_destination_dir_and_remove
# make_dest_warcs_read_only

# create_warcs_to_index_list
# index_warcs

# get_indexes_for_compression
# compress_parziale=0
# compress_completo=1
#
# compress_warc_indexes $compress_completo
# replace_warc_indexes_with_compressed_ones_in_index
#
# compress_warc_indexes $compress_parziale
# replace_warc_indexes_with_compressed_ones_in_memoria


# # Per fare test della wayback machine in ambiente di collaudo/esercizio
# # sudo service supervisor stop
# # sudo service supervisor start
# # sudo service supervisor restart

# # Per fare test della wayback machine in ambiente locale
# cd /home/argentino/magazzini_digitali/wayback
# wayback   (will run on port 8080)


# get_warcked_seeds_and_not_from_logs
# check_for_missing_seeds
# check_for_harvest_mismatch

# generate_nbn_identifiers

# make_receipts

# check_for_receipts_mismatch ### DA RIVEDERE forse sostituibile con check_match_seeds_donloaded_to_download ()

# if [ "$ambiente" != "esercizio" ]; then
# crea_wayback_index_timestamp_per_unimarc
# fi

# Ricordarsi di resettare il contatore quando si fa l'unimarc finale!! tesi/09_unimarcs/ctr_001.txt
# Se file non esiste viene creato con ctr a 1
# 13/02/2020 Rossana - unimarc genera comunque link a memoria


# GESTIRE RECORD CANCELLATI
# createUnimarc


# check_unimarc_for_no_wayback_link

# generate_last_harvest_list



# make_report

# ---------------
# TESTING
# ---------------




# ---------------
# ON REQUEST: Find archived thesis per site
# ---------------
# find_archived_thesis
# Procedura da farsi una tantum per generare numero NBN delle tesi archiviate in memoria (storico)
# generate_archived_thesis_nbn


# Procedura da farsi una tantum per recuperare il pregresso (storico) da DB MySql di BNCF
# create_unimarc_from_dublin_core





echo
echo "Elapsed time $(timer $tmr)"
echo `${ora}` "Fine processo di run.sh"
echo
echo =================
echo FINE ELABORAZIONE
echo =================

# Start Stop wayback in esercizio
#   sudo service supervisor stop
#   sudo service supervisor start

# Per cercare in memporia senza dover digitare ma  copincollando
# http://memoria.depositolegale.it/*/URL
# http://memoria.depositolegale.it/*/http://amsdottorato.unibo.it/480/    fino 2018
# http://memoria.depositolegale.it/*/http://amsdottorato.unibo.it/2206/   2019 (trovato 2015) nell'harvest del 05/11/19 questa url non e' stata scaricata





